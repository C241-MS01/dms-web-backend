// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id         BigInt   @id @default(autoincrement())
  uuid       String   @unique @default(uuid())
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  tokens tokens[]
}

model tokens {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  uuid       String   @unique @default(uuid())
  token      String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model vehicles {
  id         BigInt   @id @default(autoincrement())
  uuid       String   @unique @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  videos videos[]
}

model videos {
  id         BigInt   @id @default(autoincrement())
  vehicle_id BigInt
  uuid       String   @unique @default(uuid())
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  vehicle vehicles @relation(fields: [vehicle_id], references: [id])
  alerts  alerts[]
}

model alerts {
  id               BigInt   @id @default(autoincrement())
  video_id         BigInt
  uuid             String   @unique @default(uuid())
  ear              Float    @default(0)
  mar              Float    @default(0)
  sleep_duration   Float    @default(0)
  yawning_duration Float    @default(0)
  focus_duration   Float    @default(0)
  object_detected  String?
  time             DateTime @default(now())
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt

  video videos @relation(fields: [video_id], references: [id])
}
